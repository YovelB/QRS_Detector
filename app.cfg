/* XDCtools modules */
var Log               =   xdc.useModule('xdc.runtime.Log');

/* BIOS and kernel modules */
var BIOS              =   xdc.useModule('ti.sysbios.BIOS');
var Task              =   xdc.useModule('ti.sysbios.knl.Task');
var Timer             =   xdc.useModule('ti.sysbios.hal.Timer');
var Semaphore         =   xdc.useModule('ti.sysbios.knl.Semaphore');
var Hwi               =   xdc.useModule('ti.sysbios.family.c64p.Hwi');
var ECM               =   xdc.useModule('ti.sysbios.family.c64p.EventCombiner');

/* UIA modules */
var LoggingSetup      =   xdc.useModule('ti.uia.sysbios.LoggingSetup');

/* UIA logging module relies on the System module */
var System                      =   xdc.useModule('xdc.runtime.System');
SysStd                          =   xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy             =   SysStd;

/* SYS/BIOS configuration */
BIOS.runtimeCreatesEnabled = false;
BIOS.libType = BIOS.LibType_Custom;
BIOS.swiEnabled = false;
BIOS.clockEnabled = false;
BIOS.assertsEnabled = false;

/* Task configuration */
Task.numPriorities = 4;

var task0Params = new Task.Params();
task0Params.instance.name = "g_hECGPreprocessing";
task0Params.priority = 1;
Program.global.g_hECGPreprocessing = Task.create("&ECG_PreprocessingTask", task0Params);

var task1Params = new Task.Params();
task1Params.instance.name = "g_hECGFeatureDetect";
task1Params.priority = 2;
task1Params.vitalTaskFlag = true;
Program.global.g_hECGFeatureDetect = Task.create("&ECG_FeatureDetectTask", task1Params);

/* Swi / Hwi configuration */

/* Timer configuration */
var timer0Params = new Timer.Params();
timer0Params.instance.name = "ecgSamplingTimer";
timer0Params.period = 12500;
Program.global.ecgSamplingTimer = Timer.create(null, "&ECG_Timer_ISR", timer0Params);

/* Semaphore configuration */
var semaphore0Params = new Semaphore.Params();
semaphore0Params.instance.name = "g_sample_ready_sem";
Program.global.g_sample_ready_sem = Semaphore.create(null, semaphore0Params);

var semaphore1Params = new Semaphore.Params();
semaphore1Params.instance.name = "g_wave_ready_sem";
Program.global.g_wave_ready_sem = Semaphore.create(null, semaphore1Params);

/* Logging configuration */
LoggingSetup.sysbiosSwiLogging = false;
LoggingSetup.sysbiosHwiLogging = false;
LoggingSetup.sysbiosSemaphoreLogging = false;
LoggingSetup.loadTaskLogging = true;
LoggingSetup.loadSwiLogging = false;
LoggingSetup.loadHwiLogging = false;
LoggingSetup.loadLogging = true;
LoggingSetup.sysbiosTaskLogging = true;
